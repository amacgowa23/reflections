I would use a remote repository rather than keeping all my work local when performing changes from multiple computers, or when working on a joint project with other people.

I would want to always pull changes manually from GitHub rather
than having Git automatically stay up-to-date with my remote
repository because I want to be able to pick and choose changes
that are made to my public GitHub repository to be incorporated 
into my local repository.

A fork is basically a clone on GitHub. It allows me to create a clone from an existing branch. The branch could be mine or someone else's. A 
clone is an identical repository created on my local computer in Git. A 
branch is a label for one or more commits. 

The benefit of having a copy of the last known state of the remote stored locally is that if changes are made on GitHub I can always 
revert to the last known good state by pushing the local copy.

It would be more difficult to collaborate without Git and GitHub, because I would have to send people copies of the files that I changed highlighting the changes and asking for feedback. Comments wouldn't be visible to everyone.

The benefit of creating a separate branch is that I can more easily track changes and minimize risk to my master branch on Git and GitHub. However, the downside is that there are more steps involved to merge the changes in. 
